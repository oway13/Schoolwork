                            | #######################################################################
                            | # Test for copying block of size 4;
                            | #######################################################################
0x000:                      |   .pos 0
0x000: 30f4b002000000000000 | main:  irmovq Stack, %rsp    # Set up stack pointer
                            | 
                            |   # Set up arguments for copy function and then invoke it
0x00a: 30f20400000000000000 |   irmovq $4, %rdx    # src and dst have 4 elements
0x014: 30f60802000000000000 |   irmovq dest, %rsi  # dst array
0x01e: 30f7d801000000000000 |   irmovq src, %rdi  # src array
0x028: 803200000000000000   |   call ncopy     
0x031: 00                   |   halt      # should halt with num nonzeros in %rax
0x032:                      | StartFun:
                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of negative words (<0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | #
                            | # Describe how and why you modified the baseline code.
                            | #Start CPE 15.~~
                            | # Changing all adds and subs to iadd: 12.~~
                            | #
                            | #
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x032:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion
                            |   # Loop header
0x032: 6300                 |   xorq %rax,%rax    # count = 0;
0x034: 6222                 |   andq %rdx,%rdx    # len <= 0?
0x036: 71d101000000000000   |   jle Done    # if so, goto Done:
0x03f: c0f2fcffffffffffffff |   iaddq $-4, %rdx
0x049: 721d01000000000000   |   jl Closing
                            | 
0x052:                      | Loop:
0x052: 50a70000000000000000 |   mrmovq (%rdi), %r10
0x05c: 50370400000000000000 |   mrmovq 4(%rdi), %rbx
0x066: 40a60000000000000000 |   rmmovq %r10, (%rsi)
0x070: 62aa                 |   andq %r10, %r10
0x072: 718500000000000000   |   jle Npos1
0x07b: c0f00100000000000000 |   iaddq $1, %rax
                            | 
0x085:                      | Npos1:
0x085: 40360400000000000000 |   rmmovq %rbx, 4(%rsi)
0x08f: 6233                 |   andq %rbx, %rbx
0x091: 71a400000000000000   |   jle Npos2
0x09a: c0f00100000000000000 |   iaddq $1, %rax
                            | 
0x0a4:                      | Npos2:
0x0a4: 50a70800000000000000 |   mrmovq 8(%rdi), %r10
0x0ae: 50370c00000000000000 |   mrmovq 12(%rdi), %rbx
0x0b8: 40a60800000000000000 |   rmmovq %r10, 8(%rsi)
0x0c2: 62aa                 |   andq %r10, %r10
0x0c4: 71d700000000000000   |   jle Npos3
0x0cd: c0f00100000000000000 |   iaddq $1, %rax
                            | 
0x0d7:                      | Npos3:
0x0d7: 40360c00000000000000 |   rmmovq %rbx, 12(%rsi)
0x0e1: 6233                 |   andq %rbx, %rbx
0x0e3: 71f600000000000000   |   jle Next
0x0ec: c0f00100000000000000 |   iaddq $1, %rax
                            | 
0x0f6:                      | Next:
0x0f6: c0f71000000000000000 |   iaddq $16, %rdi
0x100: c0f61000000000000000 |   iaddq $16, %rsi
0x10a: c0f2fcffffffffffffff |   iaddq $-4, %rdx
0x114: 755200000000000000   |   jge Loop
                            | 
0x11d:                      | Closing:
0x11d: c0f20300000000000000 |   iaddq $3, %rdx
0x127: 72d101000000000000   |   jl Done
0x130: 50a70000000000000000 |   mrmovq (%rdi), %r10
0x13a: 50370400000000000000 |   mrmovq 4(%rdi), %rbx
0x144: 40a60000000000000000 |   rmmovq %r10, (%rsi)
0x14e: 62aa                 |   andq %r10, %r10
0x150: 716301000000000000   |   jle ExtraSecond
0x159: c0f00100000000000000 |   iaddq $1, %rax
                            | 
0x163:                      | ExtraSecond:
0x163: c0f2ffffffffffffffff |   iaddq $-1, %rdx
0x16d: 72d101000000000000   |   jl Done
0x176: 40360400000000000000 |   rmmovq %rbx, 4(%rsi)
0x180: 6233                 |   andq %rbx, %rbx
0x182: 719501000000000000   |   jle ExtraThird
0x18b: c0f00100000000000000 |   iaddq $1, %rax
                            | 
0x195:                      | ExtraThird:
0x195: c0f2ffffffffffffffff |   iaddq $-1, %rdx
0x19f: 72d101000000000000   |   jl Done
0x1a8: 50a70800000000000000 |   mrmovq 8(%rdi), %r10
0x1b2: 40a60800000000000000 |   rmmovq %r10, 8(%rsi)
0x1bc: 62aa                 |   andq %r10, %r10
0x1be: 71d101000000000000   |   jle Done
0x1c7: c0f00100000000000000 |   iaddq $1, %rax
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x1d1:                      | Done:
0x1d1: 90                   |   ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x1d2:                      | End:
                            | #/* $end ncopy-ys */
                            | 
0x1d2:                      | EndFun:
                            | 
                            | ###############################
                            | # Source and destination blocks 
                            | ###############################
0x1d8:                      |   .align 8
0x1d8:                      | src:
0x1d8: 0100000000000000     | 	.quad 1
0x1e0: feffffffffffffff     | 	.quad -2
0x1e8: 0300000000000000     | 	.quad 3
0x1f0: fcffffffffffffff     | 	.quad -4
0x1f8: fadebc0000000000     |   .quad 0xbcdefa # This shouldn't get moved
                            | 
0x200:                      |   .align 16
0x200:                      | Predest:
0x200: fadebc0000000000     |   .quad 0xbcdefa
0x208:                      | dest:
0x208: abefcd0000000000     | 	.quad 0xcdefab
0x210: abefcd0000000000     | 	.quad 0xcdefab
0x218: abefcd0000000000     | 	.quad 0xcdefab
0x220: abefcd0000000000     | 	.quad 0xcdefab
0x228:                      | Postdest:
0x228: bcfade0000000000     |   .quad 0xdefabc
                            | 
0x230:                      | .align 8
                            | # Run time stack
0x230: 0000000000000000     |   .quad 0
0x238: 0000000000000000     |   .quad 0
0x240: 0000000000000000     |   .quad 0
0x248: 0000000000000000     |   .quad 0
0x250: 0000000000000000     |   .quad 0
0x258: 0000000000000000     |   .quad 0
0x260: 0000000000000000     |   .quad 0
0x268: 0000000000000000     |   .quad 0
0x270: 0000000000000000     |   .quad 0
0x278: 0000000000000000     |   .quad 0
0x280: 0000000000000000     |   .quad 0
0x288: 0000000000000000     |   .quad 0
0x290: 0000000000000000     |   .quad 0
0x298: 0000000000000000     |   .quad 0
0x2a0: 0000000000000000     |   .quad 0
0x2a8: 0000000000000000     |   .quad 0
                            | 
0x2b0:                      | Stack:
