0x000:                      | 	.pos 0
0x000: 30f40002000000000000 | 	irmovq stack, %rsp			
0x00a: 804800000000000000   | 	call main				
0x013: 00                   | 	halt						
                            | 
0x018:                      | 	.align 8
                            | # Source block
0x018:                      | src:
0x018: 0100000000000000     | 	.quad 0x001
0x020: 0200000000000000     | 	.quad 0x002
0x028: 0400000000000000     | 	.quad 0x004
                            | # Destination block
0x030:                      | dest:
0x030: 1101000000000000     | 	.quad 0x111
0x038: 2202000000000000     | 	.quad 0x222
0x040: 3303000000000000     | 	.quad 0x333
                            | 
0x048:                      | main:	
0x048: 30f71800000000000000 | 	irmovq src, %rdi			# moving src into %rdi
0x052: 30f63000000000000000 | 	irmovq dest, %rsi			# moving dest into %rsi
0x05c: 30f80300000000000000 | 	irmovq $3, %r8				# putting length of block to %r8
0x066: 807000000000000000   | 	call copy					# copy(src, dest, length)
0x06f: 90                   | 	ret
                            | 
0x070:                      | copy:
0x070: 30f90100000000000000 | 	irmovq $1, %r9
0x07a: 30fc0800000000000000 | 	irmovq $8, %r12
0x084: 6300                 | 	xorq %rax, %rax
0x086: 6288                 | 	andq %r8, %r8
0x088: 70c200000000000000   | 	jmp 	test				
0x091:                      | loop:
0x091: 50a70000000000000000 | 	mrmovq (%rdi), %r10			# get first part of src
0x09b: 60c7                 | 	addq %r12, %rdi
0x09d: 40a60000000000000000 | 	rmmovq %r10, (%rsi)			# move it to dest
0x0a7: 50b60000000000000000 | 	mrmovq (%rsi), %r11
0x0b1: 60c6                 | 	addq %r12, %rsi
0x0b3: 63ab                 | 	xorq %r10, %r11
0x0b5: 74c000000000000000   | 	jne Skip
0x0be:                      | Checksum:
0x0be: 60a0                 | 	addq %r10, %rax
0x0c0:                      | Skip:
0x0c0: 6198                 | 	subq %r9, %r8
                            | 
0x0c2:                      | test:
0x0c2: 749100000000000000   | 	jne 	loop
0x0cb: 90                   | 	ret
                            | 
0x200:                      | 	.pos 0x200
0x200:                      | stack:
